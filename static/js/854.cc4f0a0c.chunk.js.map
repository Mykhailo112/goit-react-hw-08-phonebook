{"version":3,"file":"static/js/854.cc4f0a0c.chunk.js","mappings":"2PAEaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0IAalBC,GALQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oEAKZF,EAAAA,GAAAA,MAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kCAGpBI,EAASN,EAAAA,GAAAA,OAAaO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,kD,SCZ7BM,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAAY,SAAHC,GAAkB,IAAZJ,EAAII,EAAJJ,KACnB,OAAOK,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAACN,KAAMA,EAAMO,OAAQ,SAAAC,GAAO,OAAIH,EAAAA,EAAAA,KAAA,KAAAI,SAAID,GAAY,GACtE,EAEO,SAASE,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,SACdC,GAAeD,EAAAA,EAAAA,SACfE,GAAkBF,EAAAA,EAAAA,SAaxB,OACET,EAAAA,EAAAA,KAACY,EAAAA,GAAM,CAAClB,cAAeA,EAAemB,SAZnB,SAAHC,EAAAC,GAAkD,IAA5CpB,EAAImB,EAAJnB,KAAMC,EAAKkB,EAALlB,MAAOC,EAAQiB,EAARjB,SAAcmB,EAASD,EAATC,UACjDV,GACEW,EAAAA,EAAAA,IAAS,CACPtB,KAAAA,EACAC,MAAAA,EACAC,SAAAA,KAGJmB,GACF,EAG+DZ,SAC1D,SAAAc,GAAA,IAAGC,EAAYD,EAAZC,aAAY,OACdC,EAAAA,EAAAA,MAACnC,EAAI,CAACoC,aAAa,MAAKjB,SAAA,EACtBgB,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACEJ,EAAAA,EAAAA,KAAA,SAAOsB,QAASd,EAAYJ,SAAC,UAC7BJ,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAACX,EAAK,CACJkC,KAAK,OACL5B,KAAK,OACL6B,QAAQ,yHACRC,MAAM,yIACNC,YAAY,OACZC,GAAInB,OAGRR,EAAAA,EAAAA,KAACF,EAAS,CAACH,KAAK,aAGlByB,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACEJ,EAAAA,EAAAA,KAAA,SAAOsB,QAASZ,EAAaN,SAAC,YAC9BJ,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAACX,EAAK,CACJkC,KAAK,QACLC,QAAQ,yHACR7B,KAAK,QACL8B,MAAM,+FACNC,YAAY,SACZC,GAAIjB,OAGRV,EAAAA,EAAAA,KAACF,EAAS,CAACH,KAAK,cAGlByB,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACEJ,EAAAA,EAAAA,KAAA,SAAOsB,QAASX,EAAgBP,SAAC,cACjCJ,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAACX,EAAK,CACJkC,KAAK,WACLC,QAAQ,yFACR7B,KAAK,WACL8B,MAAM,+FACNC,YAAY,WACZC,GAAIhB,OAGRX,EAAAA,EAAAA,KAACF,EAAS,CAACH,KAAK,iBAGlBK,EAAAA,EAAAA,KAACR,EAAM,CAAC+B,KAAK,SAASK,SAAUT,EAAaf,SAAC,eAGzC,GAIf,C,cCtFe,SAASyB,IACtB,OACET,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACEJ,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CAAA1B,UACLJ,EAAAA,EAAAA,KAAA,SAAAI,SAAO,oBAETJ,EAAAA,EAAAA,KAACK,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin: 20px;\n`;\nexport const Label = styled.label`\n  gap: 5px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Input = styled.input`\n  border-radius: 3px;\n`;\nexport const Button = styled.button`\n  border-radius: 3px;\n  width: 100px;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { useId } from 'react';\nimport { Form, Input, Button } from './RegisterForm.styled';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst FormError = ({ name }) => {\n  return <ErrorMessage name={name} render={message => <p>{message}</p>} />;\n};\n\nexport function RegisterForm() {\n  const dispatch = useDispatch();\n  const labelNameId = useId();\n  const labelEmailId = useId();\n  const labelPasswordId = useId();\n\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      {({ isSubmitting }) => (\n        <Form autoComplete=\"off\">\n          <div>\n            <label htmlFor={labelNameId}>Name</label>\n            <div>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder=\"name\"\n                id={labelNameId}\n              />\n            </div>\n            <FormError name=\"name\" />\n          </div>\n\n          <div>\n            <label htmlFor={labelEmailId}>E-mail</label>\n            <div>\n              <Input\n                type=\"email\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                name=\"email\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                placeholder=\"e-mail\"\n                id={labelEmailId}\n              />\n            </div>\n            <FormError name=\"email\" />\n          </div>\n\n          <div>\n            <label htmlFor={labelPasswordId}>Password</label>\n            <div>\n              <Input\n                type=\"password\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                name=\"password\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                placeholder=\"password\"\n                id={labelPasswordId}\n              />\n            </div>\n            <FormError name=\"password\" />\n          </div>\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Register\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet-async';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","_templateObject3","Button","_templateObject4","initialValues","name","email","password","FormError","_ref","_jsx","ErrorMessage","render","message","children","RegisterForm","dispatch","useDispatch","labelNameId","useId","labelEmailId","labelPasswordId","Formik","onSubmit","_ref2","_ref3","resetForm","register","_ref4","isSubmitting","_jsxs","autoComplete","htmlFor","type","pattern","title","placeholder","id","disabled","Register","Helmet"],"sourceRoot":""}