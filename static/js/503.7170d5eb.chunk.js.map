{"version":3,"file":"static/js/503.7170d5eb.chunk.js","mappings":"iPAEaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0IAalBC,GALQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oEAKZF,EAAAA,GAAAA,MAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kCAGpBI,EAASN,EAAAA,GAAAA,OAAaO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,kD,mBCZ7BM,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAAY,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KACnB,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAACF,KAAMA,EAAMG,OAAQ,SAAAC,GAAO,OAAIH,EAAAA,EAAAA,KAAA,KAAAI,SAAID,GAAY,GACtE,EAEO,SAASE,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,SACfC,GAAkBD,EAAAA,EAAAA,SAYxB,OACET,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CAACjB,cAAeA,EAAekB,SAXnB,SAAHC,EAAAC,GAA4C,IAAtCnB,EAAKkB,EAALlB,MAAOC,EAAQiB,EAARjB,SAAcmB,EAASD,EAATC,UAC3CT,GACEU,EAAAA,EAAAA,IAAM,CACJrB,MAAAA,EACAC,SAAAA,KAGJmB,GACF,EAG+DX,SAC1D,SAAAa,GAAA,IAAGC,EAAYD,EAAZC,aAAY,OACdC,EAAAA,EAAAA,MAAClC,EAAI,CAACmC,aAAa,MAAKhB,SAAA,EACtBe,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACEJ,EAAAA,EAAAA,KAAA,SAAOqB,QAASb,EAAaJ,SAAC,YAC9BJ,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAACX,EAAK,CACJiC,KAAK,QACLvB,KAAK,QACLwB,QAAQ,yHACRC,MAAM,+FACNC,YAAY,SACZC,GAAIlB,OAGRR,EAAAA,EAAAA,KAACH,EAAS,CAACE,KAAK,cAGlBoB,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACEJ,EAAAA,EAAAA,KAAA,SAAOqB,QAASX,EAAgBN,SAAC,cACjCJ,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAACX,EAAK,CACJiC,KAAK,WACLvB,KAAK,WACLwB,QAAQ,yFACRC,MAAM,+FACNC,YAAY,WACZC,GAAIhB,OAGRV,EAAAA,EAAAA,KAACH,EAAS,CAACE,KAAK,iBAGlBC,EAAAA,EAAAA,KAACR,EAAM,CAAC8B,KAAK,SAASK,SAAUT,EAAad,SAAC,YAGzC,GAIf,C,cCpEe,SAASwB,IACtB,OACET,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACEJ,EAAAA,EAAAA,KAAC6B,EAAAA,GAAM,CAAAzB,UACLJ,EAAAA,EAAAA,KAAA,SAAAI,SAAO,aAETJ,EAAAA,EAAAA,KAACK,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin: 20px;\n`;\nexport const Label = styled.label`\n  gap: 5px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Input = styled.input`\n  border-radius: 3px;\n`;\nexport const Button = styled.button`\n  border-radius: 3px;\n  width: 100px;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Form, Input, Button } from './LoginForm.styled';\nimport { useId } from 'react';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst FormError = ({ name }) => {\n  return <ErrorMessage name={name} render={message => <p>{message}</p>} />;\n};\n\nexport function LoginForm() {\n  const dispatch = useDispatch();\n  const labelEmailId = useId();\n  const labelPasswordId = useId();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      {({ isSubmitting }) => (\n        <Form autoComplete=\"off\">\n          <div>\n            <label htmlFor={labelEmailId}>E-mail</label>\n            <div>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                placeholder=\"e-mail\"\n                id={labelEmailId}\n              />\n            </div>\n            <FormError name=\"email\" />\n          </div>\n\n          <div>\n            <label htmlFor={labelPasswordId}>Password</label>\n            <div>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                placeholder=\"password\"\n                id={labelPasswordId}\n              />\n            </div>\n            <FormError name=\"password\" />\n          </div>\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            LogIn\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Helmet } from 'react-helmet-async';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","_templateObject3","Button","_templateObject4","initialValues","email","password","FormError","_ref","name","_jsx","ErrorMessage","render","message","children","LoginForm","dispatch","useDispatch","labelEmailId","useId","labelPasswordId","Formik","onSubmit","_ref2","_ref3","resetForm","logIn","_ref4","isSubmitting","_jsxs","autoComplete","htmlFor","type","pattern","title","placeholder","id","disabled","Login","Helmet"],"sourceRoot":""}