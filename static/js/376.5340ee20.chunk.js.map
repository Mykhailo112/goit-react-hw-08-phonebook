{"version":3,"file":"static/js/376.5340ee20.chunk.js","mappings":"wQAEaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0IAQlBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oEAKpBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iCAGpBK,EAASP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kD,SCZtBO,EAAmB,WAAO,IAADC,EAAAC,EAAAC,EAC9BC,GAAWC,EAAAA,EAAAA,MAEjBC,GAMIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,MATZC,EAAQN,EAARM,SACAC,EAAYP,EAAZO,aACaC,EAAMR,EAAnBS,UAAaD,OACbE,EAAKV,EAALU,MACAD,EAAST,EAATS,WASFE,EAAAA,EAAAA,YAAU,WACJF,EAAUG,oBACZF,GAEJ,GAAG,CAACD,EAAUG,mBAAoBF,IAMlC,OACEG,EAAAA,EAAAA,MAAC7B,EAAI,CAAC8B,SAAUP,GALG,SAAAQ,GACnBjB,GAASkB,EAAAA,EAAAA,IAAWD,GACtB,IAG6CE,SAAA,EACzCJ,EAAAA,EAAAA,MAACzB,EAAK,CAAA6B,SAAA,CAAC,QAELC,EAAAA,EAAAA,KAAC5B,GAAK6B,EAAAA,EAAAA,GAAA,CACJC,KAAK,OACLC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,aAAa,OACTlB,EAAS,UAEdE,EAAOL,OAAQe,EAAAA,EAAAA,KAAA,OAAAD,SAAiB,QAAjBtB,EAAMa,EAAOL,YAAI,IAAAR,OAAA,EAAXA,EAAa8B,cAGrCZ,EAAAA,EAAAA,MAACzB,EAAK,CAAA6B,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAAC5B,GAAK6B,EAAAA,EAAAA,GAAA,CACJC,KAAK,QACLC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,aAAa,OACTlB,EAAS,WAEdE,EAAOJ,QAASc,EAAAA,EAAAA,KAAA,OAAAD,SAAkB,QAAlBrB,EAAMY,EAAOJ,aAAK,IAAAR,OAAA,EAAZA,EAAc6B,cAGvCZ,EAAAA,EAAAA,MAACzB,EAAK,CAAA6B,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAAC5B,GAAK6B,EAAAA,EAAAA,GAAA,CACJC,KAAK,WACLC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,aAAa,OACTlB,EAAS,cAEdE,EAAOH,WAAYa,EAAAA,EAAAA,KAAA,OAAAD,SAAqB,QAArBpB,EAAMW,EAAOH,gBAAQ,IAAAR,OAAA,EAAfA,EAAiB4B,cAE7CP,EAAAA,EAAAA,KAAC1B,EAAM,CAAC4B,KAAK,SAAQH,SAAC,eAG5B,E,UCzEaS,GAAYzC,EAAAA,EAAAA,IAAO0C,EAAAA,GAAP1C,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gDAIxByC,EAAO3C,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2BCM5B,MAVA,WACE,OACE0B,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAACxB,EAAgB,KACjBwB,EAAAA,EAAAA,KAACU,EAAI,CAAAX,SAAC,8BACNC,EAAAA,EAAAA,KAACQ,EAAS,CAACG,GAAG,SAAQZ,SAAC,aAG7B,C","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.js","pages/Registration/Registration.styled.js","pages/Registration/Registration.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin: 20px;\n`;\nexport const Label = styled.label`\n  gap: 5px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Input = styled.input`\n  border-radius: 3px;\n`;\nexport const Button = styled.button`\n  border-radius: 3px;\n  width: 100px;\n`;\n","import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { userSignUp } from 'redux/auth/operations';\nimport { Form, Label, Input, Button } from './RegistrationForm.styled';\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    formState,\n  } = useForm({\n    defaultValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n  });\n\n  useEffect(() => {\n    if (formState.isSubmitSuccessful) {\n      reset();\n    }\n  }, [formState.isSubmitSuccessful, reset]);\n\n  const registerUser = data => {\n    dispatch(userSignUp(data));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(registerUser)}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n          {...register('name')}\n        />\n        {errors.name && <div>{errors.name?.message}</div>}\n      </Label>\n\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n          {...register('email')}\n        />\n        {errors.email && <div>{errors.email?.message}</div>}\n      </Label>\n\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          autoComplete=\"off\"\n          {...register('password')}\n        />\n        {errors.password && <div>{errors.password?.message}</div>}\n      </Label>\n      <Button type=\"submit\">Register</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LoginLink = styled(Link)`\n  font-size: 15px;\n  color: violet;\n`;\nexport const Text = styled.p`\n  margin: 12px;\n`;\n","import { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nimport { LoginLink, Text } from './Registration.styled';\n\nfunction Registration() {\n  return (\n    <div>\n      <h1>Create account</h1>\n      <RegistrationForm />\n      <Text>Already have an account?</Text>\n      <LoginLink to=\"/login\">Log in</LoginLink>\n    </div>\n  );\n}\nexport default Registration;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","RegistrationForm","_errors$name","_errors$email","_errors$password","dispatch","useDispatch","_useForm","useForm","defaultValues","name","email","password","register","handleSubmit","errors","formState","reset","useEffect","isSubmitSuccessful","_jsxs","onSubmit","data","userSignUp","children","_jsx","_objectSpread","type","pattern","title","required","autoComplete","message","LoginLink","Link","Text","to"],"sourceRoot":""}