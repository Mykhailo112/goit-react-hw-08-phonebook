{"version":3,"file":"static/js/355.708db7c7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Error/Error.styled.js","components/Error/Error.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Loader.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { ImUser, ImPhone } from 'react-icons/im';\nimport { Form, Field } from 'formik';\n\nexport const FormStyle = styled(Form)`\n  padding: 18px 12px;\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 18px;\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n`;\n\nexport const Input = styled(Field)`\n  width: 250px;\n  padding: 4px 8px 4px 28px;\n  border: 2px solid #000000;\n  border-radius: 8px;\n  margin-top: 4px;\n`;\n\nexport const IconUser = styled(ImUser)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n  fill: #757575;\n`;\n\nexport const IconPhone = styled(ImPhone)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n  fill: #757575;\n`;\n\nexport const Button = styled.button`\n  width: 250px;\n  color: #ffffff;\n  background-color: #ea8a2a;\n  border: transparent;\n  border-radius: 8px;\n  padding: 4px 8px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const FormText = styled.p`\n  color: red;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport {\n  FormStyle,\n  Input,\n  Button,\n  InputWrap,\n  IconPhone,\n  IconUser,\n  FormText,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSlice';\nimport { addContact } from 'redux/contacts/operations';\nimport { useId } from 'react';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <FormText>{message}</FormText>}\n    />\n  );\n};\n\nconst validationScheme = object().shape({\n  name: string().min(5).max(50).required(),\n  number: string()\n    .matches(\n      /^[+]?[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-\\s.]?[0-9]{4,6}$/i,\n      'does not match the required format'\n    )\n    .required(),\n});\n\nexport const ContactForm = ({ onSubmit }) => {\n  const labelNameId = useId();\n  const labelNumberId = useId();\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onSubmitForm = ({ name, number }, { resetForm }) => {\n    const existingName = contacts.some(\n      contact => contact.name.trim().toLowerCase() === name.trim().toLowerCase()\n    );\n    if (existingName) {\n     console.log(`${name} is already in contacts`);\n      return;\n    }\n    const contact = { name: name.trim(), number };\n    dispatch(addContact(contact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationScheme}\n      onSubmit={onSubmitForm}\n    >\n      {({ isSubmitting }) => (\n        <FormStyle autoComplete=\"off\">\n          <div>\n            <label htmlFor={labelNameId}>Name</label>\n            <InputWrap>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder=\"Name\"\n                id={labelNameId}\n              />\n              <IconUser />\n            </InputWrap>\n            <FormError name=\"name\" />\n          </div>\n\n          <div>\n            <label htmlFor={labelNumberId}>Number</label>\n            <InputWrap>\n              <Input\n                type=\"tel\"\n                name=\"number\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                placeholder=\"Phone number\"\n                id={labelNumberId}\n              />\n              <IconPhone />\n            </InputWrap>\n            <FormError name=\"number\" />\n          </div>\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Add contact\n          </Button>\n        </FormStyle>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PhonebookList = styled.ul`\n  padding-left: 24px;\n`;\n","import styled from 'styled-components';\n\nexport const ContacItem = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-weight: 700;\n\n  & span {\n    font-weight: 400;\n  }\n`;\n\nexport const Button = styled.button`\n  border: 1px solid #000000;\n  border-radius: 4px;\n  padding: 4px 8px;\n  cursor: pointer;\n  background-color: #ffffff;\n\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    background-color: #ea8a2a;\n    border-color: #bf6b16;\n  }\n`;\n","import { deleteContact } from 'redux/contacts/operations';\nimport { ContacItem, Text, Button } from './ContactItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoading } from 'redux/contacts/contactsSlice';\nimport { CgTrash } from 'react-icons/cg';\n\nexport function ContactItem({ contact: { id, name, number } }) {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  return (\n    <ContacItem>\n      <Text>\n        {name}: <span>{number}</span>\n      </Text>\n      <Button\n        type=\"button\"\n        data-id={id}\n        onClick={() => dispatch(deleteContact(id))}\n        disabled={isLoading}\n      >\n        <CgTrash size={20} color=\"red\" />\n      </Button>\n    </ContacItem>\n  );\n}\n","import { PhonebookList } from './ContactList.styled';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilteredContacts,\n} from 'redux/contacts/contactsSlice';\n\nexport function ContactList() {\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  if (!contacts.length) return <p>The Phonebook is empty!</p>;\n  if (!filteredContacts.length) return null;\n  return (\n    <PhonebookList>\n      {filteredContacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} />\n      ))}\n    </PhonebookList>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ErrorStyled = styled.div`\n  font-size: 16px;\n  color: red;\n  text-align: center;\n  padding: 24px;\n`;\n","import { ErrorStyled } from './Error.styled';\n\nexport const Error = () => {\n  return (\n    <ErrorStyled>\n      <p>OOPS! There was an ERROR!</p>\n    </ErrorStyled>\n  );\n};\n","import styled from 'styled-components';\nimport { ImSearch } from 'react-icons/im';\n\nexport const FilterStyleDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FilterStyleLabel = styled.label`\n  text-align: left;\n  margin-bottom: 10px;\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n  margin-bottom: 24px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 4px 8px 4px 28px;\n  border: 2px solid #000000;\n  border-radius: 8px;\n`;\n\nexport const IconSearch = styled(ImSearch)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n  fill: #757575;\n`;\n","import {\n  FilterStyleLabel,\n  FilterStyleDiv,\n  IconSearch,\n  Input,\n  InputWrap,\n} from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filteredContacts, selectFilter } from 'redux/filter/filterSlice';\nimport { useId } from 'react';\n\nexport function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const inputId = useId();\n\n  return (\n    <FilterStyleDiv>\n      <FilterStyleLabel htmlFor={inputId}>\n        Find contacts by name\n      </FilterStyleLabel>\n      <InputWrap>\n        <Input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={filter}\n          onChange={e => dispatch(filteredContacts(e.currentTarget.value))}\n          id={inputId}\n        />\n        <IconSearch />\n      </InputWrap>\n    </FilterStyleDiv>\n  );\n}\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ThreeDots\n        height=\"50\"\n        width=\"50\"\n        radius=\"9\"\n        color=\"#3F51B5\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{ justifyContent: 'center' }}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Error } from 'components/Error/Error';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectEroor, selectLoading } from 'redux/contacts/contactsSlice';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const isError = useSelector(selectEroor);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {isLoading && !isError && <Loader />}\n      {isError && <Error />}\n      {!isError && (\n        <>\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["FormStyle","styled","Form","_templateObject","_taggedTemplateLiteral","InputWrap","_templateObject2","Input","Field","_templateObject3","IconUser","ImUser","_templateObject4","IconPhone","ImPhone","_templateObject5","Button","_templateObject6","FormText","_templateObject7","initialValues","name","number","FormError","_ref","_jsx","ErrorMessage","render","message","children","validationScheme","object","shape","string","min","max","required","matches","ContactForm","_ref2","onSubmit","labelNameId","useId","labelNumberId","contacts","useSelector","selectContacts","dispatch","useDispatch","Formik","validationSchema","_ref3","_ref4","resetForm","existingName","some","contact","trim","toLowerCase","console","log","concat","addContact","_ref5","isSubmitting","_jsxs","autoComplete","htmlFor","type","title","placeholder","id","disabled","PhonebookList","ContacItem","Text","ContactItem","_ref$contact","isLoading","selectLoading","onClick","deleteContact","CgTrash","size","color","ContactList","filteredContacts","selectFilteredContacts","length","map","ErrorStyled","Error","FilterStyleDiv","FilterStyleLabel","IconSearch","ImSearch","Filter","filter","selectFilter","inputId","value","onChange","e","currentTarget","Loader","_Fragment","ThreeDots","height","width","radius","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","Contacts","isError","selectEroor","useEffect","fetchContacts","Helmet"],"sourceRoot":""}